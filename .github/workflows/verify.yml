name: Test the profile vanilla and hardened
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types:
      - published
jobs:
  my-docker:
    defaults:
      run:
        shell: bash -l {0}
    name: Validate Profile - Docker
    runs-on: ubuntu-latest
    env:
      CHEF_LICENSE: accept-silent
      KITCHEN_YAML: kitchen.docker.yml
    strategy:
      matrix:
        suite: ['vanilla', 'hardened']
      fail-fast: false
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Setup Ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: '2.7'
    - name: Setup caching
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    - name: Bundle install
      run: |
        gem install bundler
        bundle config path vendor/bundle
        bundle install
    - name: Check the profile
      run: bundle exec inspec check .
    - name: Test-Kitchen
      run: |
        mkdir results
        bundle exec kitchen test ${{ matrix.suite }}-debian10-nginx-latest || true
    - name: Display our results summary
      run: bundle exec inspec_tools summary -j ./results/${{ matrix.suite }}-test-result.json --json-counts | jq .
    - name: Ensure the scan meets our threshold
      run: bundle exec inspec_tools compliance -j ./results/${{ matrix.suite }}-test-result.json -f ${{ matrix.suite }}.threshold.yml
    - name: Save Test Result JSON
      uses: actions/upload-artifact@v2
      with:
        path: results
  my-ec2:
    defaults:
      run:
        shell: bash -l {0}
    name: Validate Profile - EC2
    runs-on: ubuntu-latest
    env:
      CHEF_LICENSE: accept-silent
      KITCHEN_YAML: kitchen.ec2.yml
    strategy:
      matrix:
        suite: ['vanilla', 'hardened']
      fail-fast: false
    steps:
    - name: add needed packages
      run: sudo apt-get install -y jq
    - name: Configure AWS credentials
      env:
        AWS_SG_ID: ${{ secrets.AWS_SG_ID }}
        AWS_SUBNET_ID: ${{ secrets.AWS_SUBNET_ID }}
        AWS_SSH_KEY_ID: ${{ secrets.AWS_SSH_KEY_ID }}
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Setup our ssh-key
      run: |
        mkdir ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/${{ secrets.AWS_SSH_KEY_ID }}.pem
        chmod 400 ~/.ssh/${{ secrets.AWS_SSH_KEY_ID }}.pem
    - name: Check out code
      uses: actions/checkout@v2
    - name: Setup Ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: '2.7'
    - name: Setup caching
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    - name: Bundle install
      run: |
        gem install bundler
        bundle config path vendor/bundle
        bundle install
    - name: Check the profile
      run: bundle exec inspec check .
    - name: Test-Kitchen
      run: |
        mkdir results
        bundle exec kitchen test ${{ matrix.suite }}-ubuntu-1804 --destroy=always || true
    - name: Display our results summary
      run: bundle exec inspec_tools summary -j ./results/${{ matrix.suite }}-test-result.json --json-counts | jq .
    - name: Ensure the scan meets our threshold
      run: bundle exec inspec_tools compliance -j ./results/${{ matrix.suite }}-test-result.json -f ${{ matrix.suite }}.threshold.yml
    - name: Save Test Result JSON
      uses: actions/upload-artifact@v2
      with:
        path: results

      
